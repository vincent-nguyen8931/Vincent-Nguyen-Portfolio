{"version":3,"sources":["components/Navbars/AdminNavbar.js","components/Sidebar/Sidebar.js","contexts/BackgroundColorContext.js","views/Home.js","views/About.js","layouts/Admin/Admin.js","routes.js","contexts/ThemeContext.js","components/ThemeWrapper/ThemeWrapper.js","components/BackgroundColorWrapper/BackgroundColorWrapper.js","index.js"],"names":["AdminNavbar","ps","props","React","useState","collapseOpen","color","setcolor","useEffect","window","addEventListener","updateColor","removeEventListener","innerWidth","Navbar","className","classNames","expand","Container","fluid","toggled","sidebarOpened","NavbarToggler","onClick","toggleSidebar","NavbarBrand","href","e","preventDefault","brandText","Collapse","navbar","isOpen","Nav","InputGroup","backgroundColors","BackgroundColorContext","createContext","changeColor","Sidebar","location","useLocation","sidebarRef","useRef","navigator","platform","indexOf","PerfectScrollbar","current","suppressScrollX","suppressScrollY","destroy","routes","rtlActive","logo","logoImg","logoText","undefined","outterLink","target","src","imgSrc","alt","text","to","innerLink","Consumer","data","ref","map","prop","key","redirect","routeName","path","pathname","pro","layout","activeClassName","icon","rtlName","name","defaultProps","Home","Row","item","Col","lg","Card","CardHeader","CardTitle","tag","title","CardBody","img","style","height","description","deployedSite","githubSite","About","component","md","CardText","CardFooter","Button","Admin","mainPanelRef","document","documentElement","setsidebarOpened","classList","remove","tables","querySelectorAll","i","length","add","scrollTop","scrollingElement","toggle","Fragment","from","themes","ThemeContext","theme","changeTheme","ThemeContextWrapper","setTheme","body","Provider","value","children","BackgroundColorWrapper","setColor","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.36b55dc6.chunk.js","sourcesContent":["/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal,\n  NavbarToggler,\n  ModalHeader,\n} from \"reactstrap\";\n\nfunction AdminNavbar(props) {\n  const [collapseOpen, setcollapseOpen] = React.useState(false);\n  const [color, setcolor] = React.useState(\"navbar-transparent\");\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      window.removeEventListener(\"resize\", updateColor);\n    };\n  });\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  const updateColor = () => {\n    if (window.innerWidth < 993 && collapseOpen) {\n      setcolor(\"bg-white\");\n    } else {\n      setcolor(\"navbar-transparent\");\n    }\n  };\n \n  return (\n    <>\n      <Navbar className={classNames(\"navbar-absolute\", color)} expand=\"lg\">\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div\n              className={classNames(\"navbar-toggle d-inline\", {\n                toggled: props.sidebarOpened,\n              })}\n            >\n              <NavbarToggler onClick={props.toggleSidebar}>\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </NavbarToggler>\n            </div>\n            <NavbarBrand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n              {props.brandText}\n            </NavbarBrand>\n          </div>\n          <Collapse navbar isOpen={collapseOpen}>\n            <Nav className=\"ml-auto\" navbar>\n              <InputGroup className=\"search-bar\" />\n              <li className=\"separator d-lg-none\" />\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n}\n\n// keep InputGroup className=\"search-bar\" because it keeps the title centered properly\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink, Link, useLocation } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\nimport {\n  BackgroundColorContext,\n  backgroundColors,\n} from \"contexts/BackgroundColorContext\";\n\nvar ps;\n\nfunction Sidebar(props) {\n  const location = useLocation();\n  const sidebarRef = React.useRef(null);\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return location.pathname === routeName ? \"active\" : \"\";\n  };\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(sidebarRef.current, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n    };\n  });\n  const linkOnClick = () => {\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n  const { routes, rtlActive, logo } = props;\n  let logoImg = null;\n  let logoText = null;\n  if (logo !== undefined) {\n    if (logo.outterLink !== undefined) {\n      logoImg = (\n        <a\n          href={logo.outterLink}\n          className=\"simple-text logo-mini\"\n          target=\"_blank\"\n          onClick={props.toggleSidebar}\n        >\n          <div className=\"logo-img\">\n            <img src={logo.imgSrc} alt=\"react-logo\" />\n          </div>\n        </a>\n      );\n      logoText = (\n        <a\n          href={logo.outterLink}\n          className=\"simple-text logo-normal\"\n          target=\"_blank\"\n          onClick={props.toggleSidebar}\n        >\n          {logo.text}\n        </a>\n      );\n    } else {\n      logoImg = (\n        <Link\n          to={logo.innerLink}\n          className=\"simple-text logo-mini\"\n          onClick={props.toggleSidebar}\n        >\n          <div className=\"logo-img\">\n            <img src={logo.imgSrc} alt=\"react-logo\" />\n          </div>\n        </Link>\n      );\n      logoText = (\n        <Link\n          to={logo.innerLink}\n          className=\"simple-text logo-normal\"\n          onClick={props.toggleSidebar}\n        >\n          {logo.text}\n        </Link>\n      );\n    }\n  }\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color }) => (\n        <div className=\"sidebar\" data={color}>\n          <div className=\"sidebar-wrapper\" ref={sidebarRef}>\n            {logoImg !== null || logoText !== null ? (\n              <div className=\"logo\">\n                {logoImg}\n                {logoText}\n              </div>\n            ) : null}\n            <Nav>\n              {routes.map((prop, key) => {\n                if (prop.redirect) return null;\n                return (\n                  <li\n                    className={\n                      activeRoute(prop.path) + (prop.pro ? \" active-pro\" : \"\")\n                    }\n                    key={key}\n                  >\n                    <NavLink\n                      to={prop.layout + prop.path}\n                      className=\"nav-link\"\n                      activeClassName=\"active\"\n                      onClick={props.toggleSidebar}\n                    >\n                      <i className={prop.icon} />\n                      <p>{rtlActive ? prop.rtlName : prop.name}</p>\n                    </NavLink>\n                  </li>\n                );\n              })}\n            </Nav>\n          </div>\n        </div>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  routes: [{}],\n};\n\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string,\n  }),\n};\n\nexport default Sidebar;\n","import { createContext } from \"react\";\n\nexport const backgroundColors = {\n  primary: \"primary\",\n  blue: \"blue\",\n  green: \"green\",\n};\n\nexport const BackgroundColorContext = createContext({\n  color: backgroundColors.blue,\n  changeColor: (color) => {},\n});\n","/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n// core components\nimport data from \"../data.json\";\n\nfunction Home() {\n  return (\n    <div className=\"content\">\n      <Row>\n        {data.map(item =>\n          <Col lg=\"6\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <CardTitle tag=\"h3\">\n                  {item.title}\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <figure>\n                  <img src={item.img} style={{ height: \"200px\" }} />\n                </figure>\n                <p>{item.description} <br />\n                </p>\n                <div style={{ color: \"white\" }}>\n                  Deployed site:\n            <a href={item.deployedSite} style={{ color: \"rgb(37, 120, 246)\" }}>\n                    View here</a>\n                </div>\n                <div style={{ color: \"white\" }}>\n                  GitHub Repo:\n             <a href={item.githubSite} style={{ color: \"rgb(37, 120, 246)\" }}>\n                    Link</a>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        )}\n      </Row>\n    </div>\n  );\n}\n\nexport default Home;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardText,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nfunction About() {\n  return (\n    <div className=\"content\">\n      <Row>\n        <Col md=\"12\">\n          <Card className=\"card-user\">\n            <CardBody>\n              <CardText />\n              <div className=\"author\">\n                <div className=\"block block-one\" />\n                <div className=\"block block-two\" />\n                <div className=\"block block-three\" />\n                <div className=\"block block-four\" />\n                  <h3 className=\"title\">Vincent Nguyen</h3>\n              </div>\n              <div className=\"card-description\">\n              An aspiring full stack developer who completed the full stack coding course from UC Berkeley in March 2021. My reason is to increase my knowledge of building applications and apply what I have learned from my Computer Science degree. I graduated from CSU Stanislaus in May 2020.\n              </div>\n            </CardBody>\n            <CardFooter>\n              <div className=\"button-container\">\n                <Button className=\"btn-icon btn-round\" >\n                  <a className=\"fab fa-linkedin\" href=\"https://www.linkedin.com/in/vincent-nguyen8931/\" style={{color: \"white\"}}/>\n                </Button>\n                <Button className=\"btn-icon btn-round\" >\n                  <a className=\"fab fa-github\" href=\"https://github.com/vincent-nguyen8931\" style={{color: \"white\"}}/>\n                </Button>\n              </div>\n            </CardFooter>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default About;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport routes from \"routes.js\";\n\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\n\nvar ps;\n\nfunction Admin(props) {\n  const location = useLocation();\n  const mainPanelRef = React.useRef(null);\n  const [sidebarOpened, setsidebarOpened] = React.useState(\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\n  );\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(mainPanelRef.current, {\n        suppressScrollX: true,\n      });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n      }\n    };\n  });\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    if (mainPanelRef.current) {\n      mainPanelRef.current.scrollTop = 0;\n    }\n  }, [location]);\n  // this function opens and closes the sidebar on small devices\n  const toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    setsidebarOpened(!sidebarOpened);\n  };\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  const getBrandText = () => {\n    return \"Vincent Nguyen\";\n  };\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color, changeColor }) => (\n        <React.Fragment>\n          <div className=\"wrapper\">\n            <Sidebar\n              routes={routes}\n              toggleSidebar={toggleSidebar}\n            />\n            <div className=\"main-panel\" ref={mainPanelRef} data={color}>\n              <AdminNavbar\n                brandText={getBrandText(location.pathname)}\n                toggleSidebar={toggleSidebar}\n                sidebarOpened={sidebarOpened}\n              />\n              <Switch>\n                {getRoutes(routes)}\n                <Redirect from=\"*\" to=\"/admin/dashboard\" />\n              </Switch>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nexport default Admin;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Home from \"views/Home.js\";\nimport About from \"views/About.js\";\n\nvar routes = [\n  {\n    path: \"/home\",\n    name: \"Home\",\n    icon: \"tim-icons icon-world\",\n    component: Home,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/about\",\n    name: \"About\",\n    icon: \"tim-icons icon-single-02\",\n    component: About,\n    layout: \"/admin\",\n  }\n];\nexport default routes;\n","import { createContext } from \"react\";\n\nexport const themes = {\n  dark: \"\",\n  light: \"white-content\",\n};\n\nexport const ThemeContext = createContext({\n  theme: themes.dark,\n  changeTheme: () => {},\n});\n","import React, { useState, useEffect } from \"react\";\nimport { ThemeContext, themes } from \"contexts/ThemeContext\";\n\nexport default function ThemeContextWrapper(props) {\n  const [theme, setTheme] = useState(themes.dark);\n\n  function changeTheme(theme) {\n    setTheme(theme);\n  }\n\n  useEffect(() => {\n    switch (theme) {\n      case themes.light:\n        document.body.classList.add(\"white-content\");\n        break;\n      case themes.dark:\n      default:\n        document.body.classList.remove(\"white-content\");\n        break;\n    }\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme: theme, changeTheme: changeTheme }}>\n      {props.children}\n    </ThemeContext.Provider>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  BackgroundColorContext,\n  backgroundColors,\n} from \"contexts/BackgroundColorContext\";\n\nexport default function BackgroundColorWrapper(props) {\n  const [color, setColor] = useState(backgroundColors.blue);\n\n  function changeColor(color) {\n    setColor(color);\n  }\n\n  return (\n    <BackgroundColorContext.Provider\n      value={{ color: color, changeColor: changeColor }}\n    >\n      {props.children}\n    </BackgroundColorContext.Provider>\n  );\n}\n","/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AdminLayout from \"layouts/Admin/Admin.js\";\n\nimport \"assets/scss/black-dashboard-react.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/css/nucleo-icons.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nimport ThemeContextWrapper from \"./components/ThemeWrapper/ThemeWrapper\";\nimport BackgroundColorWrapper from \"./components/BackgroundColorWrapper/BackgroundColorWrapper\";\n\nReactDOM.render(\n  <ThemeContextWrapper>\n    <BackgroundColorWrapper>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />} />\n          <Redirect from=\"/\" to=\"/admin/home\" />\n        </Switch>\n      </BrowserRouter>\n    </BackgroundColorWrapper>\n  </ThemeContextWrapper>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}